name: release

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Enter the name of the tag which to release.'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # The introduction just shows some useful informations.
  intro:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
    - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."

  # Build all targets
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    needs: intro
    strategy:
      matrix:
        environment: ["esp32doit-devkit-v1-usb", "esp32-nodemcu-usb", "az-delivery-devkit-v4-usb", "ttgo-t-display-usb"]

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.tag_name }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    
    - name: Create release artifcats folder
      run: |
        mkdir ${{ github.workspace }}/artifacts

    - name: Compile ${{ matrix.environment }} firmware
      run: platformio run --environment ${{ matrix.environment }}
    
    - name: Build ${{ matrix.environment }} filesystem image
      run: platformio run --environment ${{ matrix.environment }} --target buildfs

    - name: Deploy ${{ matrix.environment }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.environment }}
        path: |
          ${{ github.workspace }}/.pio/build/${{ matrix.environment }}/firmware.bin
          ${{ github.workspace }}/.pio/build/${{ matrix.environment }}/spiffs.bin
        retention-days: 5

  # Deploy release artifacts
  deploy:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Download release artifacts
      uses: actions/download-artifact@v2
      with:
        path: ${{ github.workspace }}/artifacts

    - name: Display structure of release artifacts
      run: ls -R
      working-directory: ${{ github.workspace }}/artifacts

    - name: Zip release artifacts folder
      run: zip -r ${{ github.event.repository.name }}-${{ github.event.inputs.tag_name }}.zip .
      working-directory: ${{ github.workspace }}/artifacts

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        files: ${{ github.workspace }}/artifacts/${{ github.event.repository.name }}-${{ github.event.inputs.tag_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
