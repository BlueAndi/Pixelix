@startuml app_layer

package "Application" as app {

    component "main" as main <<program-entry>>

    package "StateMachine" as stateMachinePckg {
        component "StateMachine" as stateMachine
    }
    
    package "General" as generalPckg {
        component "MiniTerminal" as miniTerminal
        component "MemoryMonitor" as memoryMonitor
    }

    package "ButtonHandler" as buttonHandlerPckg {
        component "ButtonHandler" as buttonHandler
    }

    package "DisplayMgr" as displayMgrPckg {
        component "DisplayMgr" as displayMgr
    }

    package "Plugin" as pluginPckg {
        component "PluginMgr" as pluginMgr
    }

    package "SystemState" as systemStatePckg {
        component "APState" as apState
        component "ConnectedState" as connectedState
        component "ConnectingState" as connectingState
        component "ErrorState" as errorState
        component "IdleState" as idleState
        component "InitState" as initState
        component "RestartState" as restartState
    }

    package "Update" as updatePckg {
        component "UpdateMgr" as updateMgr
    }

    main --> stateMachine
    main --> miniTerminal
    main ---> buttonHandler
    main --> memoryMonitor
    stateMachine o---> systemStatePckg

    initState ...> updateMgr: <<use>>
    connectedState ...> updateMgr: <<use>>
    restartState ...> updateMgr: <<use>>
}

@enduml
