; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = adafruit_feather_esp32_v2-LED-32x8
;default_envs = adafruit_matrixportal_s3-HUB75-64x64
;default_envs = az-delivery-devkit-v4-LED-32x8
default_envs = esp32doit-devkit-v1-LED-32x8
;default_envs = esp32doit-devkit-v1-HUB75-64x64
;default_envs = esp32-s3-devkitc-1-n16r8v-LED-32x8
;default_envs = esp32-s3-devkitc-1-n16r8v-LED-32x16
;default_envs = esp32-nodemcu-LED-32x8
;default_envs = lilygo-ttgo-t-display-TFT-32x8
;default_envs = lilygo-t-display-s3-TFT-32x8
;default_envs = m5stack_core-TFT-32x8
;default_envs = ulanzi-tc001-LED-32x8
;default_envs = wemos_lolin_s2_mini-LED-32x8

extra_configs =
    config/buildMode.ini
    config/board.ini
    config/checker.ini
    config/configNormal.ini
    config/configSmall.ini
    config/configTiny.ini
    config/configSmallNoI2s.ini
    config/configSmallUlanzi.ini
    config/display.ini
    config/mcu.ini

; ********************************************************************************
; Apply for all environments
; ********************************************************************************
[env]
; Check for the compatibility with frameworks and dev/platforms
lib_compat_mode = strict
lib_ldf_mode = off
lib_deps =
    bblanchon/StreamUtils @ ~1.8.0
    bblanchon/ArduinoJson @ ~6.21.5

; ********************************************************************************
; Select build mode here!
; ********************************************************************************
[mode:selected]
extends = mode:release
build_flags =
    ${mode:release.build_flags}

; ********************************************************************************
; Common for programming via USB
; ********************************************************************************
[common:prog_usb]
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
upload_protocol = esptool
extra_scripts =

; ********************************************************************************
; Common for programming via OTA
; ********************************************************************************
[common:prog_ota]
upload_protocol = espota
upload_port = 192.168.x.x
upload_flags =
   --port=3232
   --auth=maytheforcebewithyou
extra_scripts =

; ********************************************************************************
; Adafruit ESP32 Feather V2 - Programming via USB
; ********************************************************************************
[env:adafruit_feather_esp32_v2-LED-32x8]
extends = board:adafruit_feather_esp32_v2-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:adafruit_feather_esp32_v2-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:adafruit_feather_esp32_v2-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; Adafruit MatrixPortal S3 - Programming via USB
; ********************************************************************************
[env:adafruit_matrixportal_s3-HUB75-64x64]
extends = board:adafruit_matrixportal_s3-HUB75-64x64, common:prog_usb, mode:selected, checker
build_flags =
    ${board:adafruit_matrixportal_s3-HUB75-64x64.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:adafruit_matrixportal_s3-HUB75-64x64.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; AZ-Delivery ESP-32 Dev Kit C V4 - LED matrix - Programming via USB
; ********************************************************************************
[env:az-delivery-devkit-v4-LED-32x8]
extends = board:az-delivery-devkit-v4-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:az-delivery-devkit-v4-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:az-delivery-devkit-v4-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32 DevKit v1 - LED matrix - Programming via USB
; ********************************************************************************
[env:esp32doit-devkit-v1-LED-32x8]
extends = board:esp32doit-devkit-v1-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:esp32doit-devkit-v1-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32doit-devkit-v1-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32 DevKit v1 - HUB75 panel - Programming via USB
; ********************************************************************************
[env:esp32doit-devkit-v1-HUB75-64x64]
extends = board:esp32doit-devkit-v1-HUB75-64x64, common:prog_usb, mode:selected, checker
build_flags =
    ${board:esp32doit-devkit-v1-HUB75-64x64.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32doit-devkit-v1-HUB75-64x64.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32-S3 DevKitC-1-N16R8V - LED matrix - Programming via USB
; ********************************************************************************
[env:esp32-s3-devkitc-1-n16r8v-LED-32x8]
extends = board:esp32-s3-devkitc-1-n16r8v-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:esp32-s3-devkitc-1-n16r8v-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32-s3-devkitc-1-n16r8v-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32-S3 DevKitC-1-N16R8V - LED matrix 32x16 - Programming via USB
; ********************************************************************************
[env:esp32-s3-devkitc-1-n16r8v-LED-32x16]
extends = board:esp32-s3-devkitc-1-n16r8v-LED-32x16, common:prog_usb, mode:selected, checker
build_flags =
    ${board:esp32-s3-devkitc-1-n16r8v-LED-32x16.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32-s3-devkitc-1-n16r8v-LED-32x16.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32 NodeMCU - LED matrix - Programming via USB
; ********************************************************************************
[env:esp32-nodemcu-LED-32x8]
extends = board:esp32-nodemcu-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:esp32-nodemcu-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32-nodemcu-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; LILYGO(R) TTGO T-Display ESP32 WiFi and Bluetooth Module Development Board - Programming via USB
; ********************************************************************************
[env:lilygo-ttgo-t-display-TFT-32x8]
extends = board:lilygo-ttgo-t-display-TFT-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:lilygo-ttgo-t-display-TFT-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:lilygo-ttgo-t-display-TFT-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; LILYGO(R) T-Display S3 ESP32 WiFi and Bluetooth Module Development Board - Programming via USB
; ********************************************************************************
[env:lilygo-t-display-s3-TFT-32x8]
extends = board:lilygo-t-display-s3-TFT-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:lilygo-t-display-s3-TFT-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:lilygo-t-display-s3-TFT-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; M5Stack Core ESP32 WiFi and Bluetooth Module Development Board - Programming via USB
; ********************************************************************************
[env:m5stack_core-TFT-32x8]
extends = board:m5stack_core-TFT-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:m5stack_core-TFT-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:m5stack_core-TFT-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; Ulanzi TC001 - LED matrix - Programming via USB
; ********************************************************************************
[env:ulanzi-tc001-LED-32x8]
extends = board:ulanzi-tc001-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:ulanzi-tc001-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:ulanzi-tc001-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; WEMOS Lolin S2 Mini - Programming via USB
; ********************************************************************************
[env:wemos_lolin_s2_mini-LED-32x8]
extends = board:wemos_lolin_s2_mini-LED-32x8, common:prog_usb, mode:selected, checker
build_flags =
    ${board:wemos_lolin_s2_mini-LED-32x8.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:wemos_lolin_s2_mini-LED-32x8.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; Native desktop platform - Only for testing purposes
; ********************************************************************************
[env:test]
platform = native @ ~1.2.1
test_framework = unity
build_flags =
    -std=c++11
    -D PROGMEM=
    -D NATIVE
    -I ./test/stub
lib_compat_mode = off   ; The muwerk/mufonts require Arduino framework.
lib_deps =
    ArduinoNative
    StateMachine
    unity
    Utilities
    YAWidgets
lib_ignore =
    Sensors
    ${display:led_matrix_column_major_alternating.lib_deps_builtin}
    ${display:led_matrix_row_major_alternating.lib_deps_builtin}
    ${display:lilygo_ttgo_tdisplay.lib_deps_builtin}
    ${display:lilygo_tdisplay-s3.lib_deps_builtin}
check_tool = cppcheck, clangtidy
check_severity = high, medium
check_src_filters =
    +<include/>
    +<src/>
    +<lib/>
check_flags =
    cppcheck: --std=c++11 --inline-suppr --suppress=noExplicitConstructor --suppress=unreadVariable --suppress=unusedFunction --suppress=*:*/libdeps/*
    clangtidy: --header-filter='' --checks=-*,clang-analyzer-*,performance-*,portability-*,readability-uppercase-literal-suffix,readability-redundant-control-flow --warnings-as-errors=-*,clang-analyzer-*,performance-*,portability-*,readability-uppercase-literal-suffix,readability-redundant-control-flow
