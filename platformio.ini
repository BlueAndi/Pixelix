; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = adafruit_feather_esp32_v2-usb
;default_envs = lilygo-t-display-s3-usb

; ********************************************************************************
; Common for all environments
; ********************************************************************************
[env]
check_tool = clangtidy
check_severity = high, medium
check_patterns =
    include
    src
    lib/BaseGfx
    lib/Common
    lib/FadeEffects
    lib/HalLedMatrix
    lib/HalTftDisplay
    lib/LinkedList
    lib/Os
    lib/Sensors
    lib/StateMachine
    lib/Utilities
    lib/YAGfx
    lib/YAWidgets
check_flags =
    clangtidy: --checks=-*,clang-analyzer-*,performance-*

; ********************************************************************************
; Build mode configurations
;   * debug: Standard debugging purposes during development.
;   * release: The release build contains only the relevant user informations.
;   * trace: Hardcore debugging by following e.g. method call hierarchy.
; ********************************************************************************
[mode:debug]
build_flags =
    -DCONFIG_DISPLAY_MGR_ENABLE_STATISTICS=1
    -DLOG_DEBUG_ENABLE=1
    -DLOG_TRACE_ENABLE=0
    -DCONFIG_LOG_SEVERITY=Logging::LOG_LEVEL_DEBUG
    -DCONFIG_ESP_LOG_SEVERITY=ESP_LOG_DEBUG

[mode:release]
build_flags =
    -DCONFIG_DISPLAY_MGR_ENABLE_STATISTICS=0
    -DLOG_DEBUG_ENABLE=0
    -DLOG_TRACE_ENABLE=0
    -DCONFIG_LOG_SEVERITY=Logging::LOG_LEVEL_INFO
    -DCONFIG_ESP_LOG_SEVERITY=ESP_LOG_INFO

[mode:trace]
build_flags =
    -DCONFIG_DISPLAY_MGR_ENABLE_STATISTICS=1
    -DLOG_DEBUG_ENABLE=1
    -DLOG_TRACE_ENABLE=1
    -DCONFIG_LOG_SEVERITY=Logging::LOG_LEVEL_TRACE
    -DCONFIG_ESP_LOG_SEVERITY=ESP_LOG_VERBOSE

; ********************************************************************************
; Select mode here!
; ********************************************************************************
[mode:selected]
extends = mode:release
build_flags =
    ${mode:release.build_flags}

; ********************************************************************************
; Common for esp32 environments
; ********************************************************************************
[common:esp32_env]
platform = espressif32 @ ~5.2.0
framework = arduino
build_flags =
    -I./src/Common
    -I./src/Gfx
    -I./src/Hal
    -I./src/Performance
    -I./src/Plugin
    -I./src/Plugin/Plugins
    -I./src/StateMachine
    -I./src/Update
    -I./src/Web
    -I./src/Web/WsCommand
    -DCONFIG_ASYNC_TCP_RUNNING_CORE=APP_CPU_NUM
    -DCONFIG_ASYNC_TCP_USE_WDT=1
    -DASYNC_TCP_SSL_ENABLED=1
    -DPIO_ENV="$PIOENV"
    -Wl,-Map,firmware.map
lib_deps_external =
    bblanchon/ArduinoJson @ ~6.19.4
    bblanchon/StreamUtils @ ~1.6.3
    adafruit/Adafruit Unified Sensor @ ~1.1.5
    adafruit/DHT sensor library @ ~1.4.2
    kosme/arduinoFFT @ ~1.5.6
    sensirion/arduino-sht @ ~1.2.2
    muwerk/mufonts @ ~0.2.0
    https://github.com/yubox-node-org/AsyncTCPSock
    https://github.com/BlueAndi/ESPAsyncWebServer.git#tilde2
lib_deps_builtin =
    Wire
    LittleFS
lib_ignore_external =
    AsyncTCP
lib_ignore_builtin =
    ArduinoNative
check_skip_packages = yes
; Check for the compatibility with frameworks and dev/platforms
lib_compat_mode = strict
; Parses ALL C/C++ source files of the project and follows only by nested includes from the libraries.
; And evaluates C/C++ Preprocessor conditional syntax.
lib_ldf_mode = chain+

; ********************************************************************************
; LED matrix based on WS2812B (neopixels)
; ********************************************************************************
[display:led_matrix]
build_flags =
lib_deps_builtin =
    HalLedMatrix
lib_deps_external =
    makuna/NeoPixelBus @ ~2.7.0
lib_ignore_builtin =
    HalTftDisplay
lib_ignore_external =

; ********************************************************************************
; LILYGO(R) TTGO T-Display
; http://www.lilygo.cn/prod_view.aspx?TypeId=50033&Id=1126&FId=t3:50033:3
; Configuration based on https://github.com/Xinyuan-LilyGO/TTGO-T-Display/blob/master/TFT_eSPI/User_Setups/Setup25_TTGO_T_Display.h
; ********************************************************************************
[display:lilygo_ttgo_tdisplay]
build_flags =
    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER
    -DTFT_WIDTH=135
    -DTFT_HEIGHT=240
    -DCGRAM_OFFSET=1
    -DTFT_MISO=-1
    -DTFT_MOSI=19
    -DTFT_SCLK=18
    -DTFT_CS=5
    -DTFT_DC=16
    -DTFT_RST=23
    -DTFT_BL=4
    -DTFT_BACKLIGHT_ON=HIGH
    -DSPI_FREQUENCY=40000000
    -DSPI_READ_FREQUENCY=6000000
    -DDISABLE_ALL_LIBRARY_WARNINGS
    -DTFT_MATRIX_WIDTH=32U
    -DTFT_MATRIX_HEIGHT=8U
    -DTFT_PIXEL_WIDTH=6
    -DTFT_PIXEL_HEIGHT=6
    -DTFT_PIXEL_DISTANCE=1
    -DTFT_DEFAULT_BRIGHTNESS=127
lib_deps_builtin =
    HalTftDisplay
lib_deps_external =
    bodmer/TFT_eSPI @ ~2.4.70
lib_ignore_builtin =
    HalLedMatrix
lib_ignore_external =

; ********************************************************************************
; LILYGO(R) T-Display S3
; https://github.com/Xinyuan-LilyGO/T-Display-S3
; ********************************************************************************
[display:lilygo_tdisplay-s3]
build_flags =
    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER
    -DTFT_PARALLEL_8_BIT
    -DCGRAM_OFFSET
    -DTFT_INVERSION_ON
    -DTFT_RGB_ORDER=TFT_BGR
    -DTFT_WIDTH=170
    -DTFT_HEIGHT=320
    -DTFT_CS=6
    -DTFT_DC=7
    -DTFT_RST=5
    -DTFT_WR=8
    -DTFT_RD=9
    -DTFT_DATA_PIN_OFFSET_EN
    -DTFT_BL=38
    -DTFT_D0=39
    -DTFT_D1=40
    -DTFT_D2=41
    -DTFT_D3=42
    -DTFT_D4=45
    -DTFT_D5=46
    -DTFT_D6=47
    -DTFT_D7=48
    -DSPI_FREQUENCY=5000000
    -DSPI_READ_FREQUENCY=2000000
    -DSPI_TOUCH_FREQUENCY=2500000
    -DDISABLE_ALL_LIBRARY_WARNINGS
    -DTFT_MATRIX_WIDTH=32U
    -DTFT_MATRIX_HEIGHT=8U
    -DTFT_PIXEL_WIDTH=8
    -DTFT_PIXEL_HEIGHT=8
    -DTFT_PIXEL_DISTANCE=1
    -DTFT_DEFAULT_BRIGHTNESS=200
lib_deps_builtin =
    HalTftDisplay
lib_deps_external =
    https://github.com/nhjschulz/TFT_eSPI
lib_ignore_builtin =
    HalLedMatrix
lib_ignore_external =

; ********************************************************************************
; Common for programming via USB
; ********************************************************************************
[common:prog_usb]
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
upload_protocol = esptool
extra_scripts =

; ********************************************************************************
; Common for programming via OTA
; ********************************************************************************
[common:prog_ota]
upload_protocol = espota
upload_port = 192.168.x.x
upload_flags =
   --port=3232
   --auth=maytheforcebewithyou
extra_scripts =
    post:./scripts/start_upload_dialog.py

; ********************************************************************************
; ESP32 DevKit v1 - LED matrix
; ********************************************************************************
[board:esp32doit-devkit-v1]
extends = common:esp32_env, display:led_matrix
board = esp32doit-devkit-v1
board_build.partitions = ./partitionTables/custom_4MB.csv
board_build.filesystem = littlefs
build_flags =
    ${common:esp32_env.build_flags}
    ${display:led_matrix.build_flags}
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:led_matrix.lib_deps_builtin}
    ${display:led_matrix.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:led_matrix.lib_ignore_builtin}
    ${display:led_matrix.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; ESP32 DevKit v1 - LED matrix - Programming via USB
; ********************************************************************************
[env:esp32doit-devkit-v1-usb]
extends = board:esp32doit-devkit-v1, common:prog_usb, mode:selected
build_flags =
    ${board:esp32doit-devkit-v1.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32doit-devkit-v1.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32 DevKit v1 - LED matrix - Programming via OTA
; ********************************************************************************
[env:esp32doit-devkit-v1-ota]
extends = board:esp32doit-devkit-v1, common:prog_ota, mode:selected
build_flags =
    ${board:esp32doit-devkit-v1.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32doit-devkit-v1.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; ESP32 NodeMCU - LED matrix
; ********************************************************************************
[board:esp32-nodemcu]
extends = common:esp32_env, display:led_matrix
board = nodemcu-32s
board_build.partitions = ./partitionTables/custom_4MB.csv
board_build.filesystem = littlefs
build_flags =
    ${common:esp32_env.build_flags}
    ${display:led_matrix.build_flags}
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:led_matrix.lib_deps_builtin}
    ${display:led_matrix.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:led_matrix.lib_ignore_builtin}
    ${display:led_matrix.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; ESP32 NodeMCU - LED matrix - Programming via USB
; ********************************************************************************
[env:esp32-nodemcu-usb]
extends = board:esp32-nodemcu, common:prog_usb, mode:selected
build_flags =
    ${board:esp32-nodemcu.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32-nodemcu.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; ESP32 NodeMCU - LED matrix - Programming via OTA
; ********************************************************************************
[env:esp32-nodemcu-ota]
extends = board:esp32-nodemcu, common:prog_ota, mode:selected
build_flags =
    ${board:esp32-nodemcu.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:esp32-nodemcu.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; AZ-Delivery ESP-32 Dev Kit C V4 - LED matrix
; ********************************************************************************
[board:az-delivery-devkit-v4]
extends = common:esp32_env, display:led_matrix
board = az-delivery-devkit-v4
board_build.partitions = ./partitionTables/custom_4MB.csv
board_build.filesystem = littlefs
build_flags =
    ${common:esp32_env.build_flags}
    ${display:led_matrix.build_flags}
    -DLED_BUILTIN=IoPin::NC
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:led_matrix.lib_deps_builtin}
    ${display:led_matrix.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:led_matrix.lib_ignore_builtin}
    ${display:led_matrix.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; AZ-Delivery ESP-32 Dev Kit C V4 - LED matrix - Programming via USB
; ********************************************************************************
[env:az-delivery-devkit-v4-usb]
extends = board:az-delivery-devkit-v4, common:prog_usb, mode:selected
build_flags =
    ${board:az-delivery-devkit-v4.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:az-delivery-devkit-v4.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; AZ-Delivery ESP-32 Dev Kit C V4 - LED matrix - Programming via OTA
; ********************************************************************************
[env:az-delivery-devkit-v4-ota]
extends = board:az-delivery-devkit-v4, common:prog_ota, mode:selected
build_flags =
    ${board:az-delivery-devkit-v4.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:az-delivery-devkit-v4.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; LILYGO(R) TTGO T-Display ESP32 WiFi and Bluetooth Module Development Board
; ********************************************************************************
[board:lilygo-ttgo-t-display]
extends = common:esp32_env, display:lilygo_ttgo_tdisplay
board = nodemcu-32s
board_name = "Lilygo(R) TTGO T-Display"
board_build.partitions = default_8MB.csv
board_build.filesystem = littlefs
board_upload.flash_size = "8MB"
board_upload.maximum_size = 8388608
build_flags =
    ${common:esp32_env.build_flags}
    ${display:lilygo_ttgo_tdisplay.build_flags}
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:lilygo_ttgo_tdisplay.lib_deps_builtin}
    ${display:lilygo_ttgo_tdisplay.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:lilygo_ttgo_tdisplay.lib_ignore_builtin}
    ${display:lilygo_ttgo_tdisplay.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; LILYGO(R) TTGO T-Display ESP32 WiFi and Bluetooth Module Development Board - Programming via USB
; ********************************************************************************
[env:lilygo-ttgo-t-display-usb]
extends = board:lilygo-ttgo-t-display, common:prog_usb, mode:selected
build_flags =
    ${board:lilygo-ttgo-t-display.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:lilygo-ttgo-t-display.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; LILYGO(R) TTGO T-Display ESP32 WiFi and Bluetooth Module Development Board - Programming via OTA
; ********************************************************************************
[env:lilygo-ttgo-t-display-ota]
extends = board:lilygo-ttgo-t-display, common:prog_ota, mode:selected
build_flags =
    ${board:lilygo-ttgo-t-display.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:lilygo-ttgo-t-display.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; LILYGO(R) T-Display ESP32 S3 WiFi and Bluetooth Module Development Board
;
; USB CDC: https://docs.espressif.com/projects/arduino-esp32/en/latest/api/usb_cdc.html
; USB CDC On Boot: https://docs.espressif.com/projects/arduino-esp32/en/latest/tutorials/cdc_dfu_flash.html#usb-cdc
; ********************************************************************************
[board:lilygo-t-display-s3]
extends = common:esp32_env, display:lilygo_tdisplay-s3
board = esp32-s3-devkitc-1
board_name = "Lilygo(R) T-Display S3 (16 MB QD, 8MB PSRAM)"
board_build.arduino.memory_type = qio_opi
board_build.partitions = ./partitionTables/custom_16MB.csv
board_build.filesystem = littlefs
board_upload.maximum_size = 16777216
board_upload.flash_size = 16MB
build_flags =
    ${common:esp32_env.build_flags}
    ${display:lilygo_tdisplay-s3.build_flags}
    -DARDUINO_USB_CDC_ON_BOOT
    -DBOARD_LILYGO_T_DISPLAY_S3
    -DBOARD_HAS_PSRAM
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:lilygo_tdisplay-s3.lib_deps_builtin}
    ${display:lilygo_tdisplay-s3.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:lilygo_tdisplay-s3.lib_ignore_builtin}
    ${display:lilygo_tdisplay-s3.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; LILYGO(R) T-Display S3 ESP32 WiFi and Bluetooth Module Development Board - Programming via USB
; ********************************************************************************
[env:lilygo-t-display-s3-usb]
extends = board:lilygo-t-display-s3, common:prog_usb, mode:selected
build_flags =
    ${board:lilygo-t-display-s3.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:lilygo-t-display-s3.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; LILYGO(R) T-Display S3 ESP32 WiFi and Bluetooth Module Development Board - Programming via OTA
; ********************************************************************************
[env:lilygo-t-display-s3-ota]
extends = board:lilygo-t-display-s3, common:prog_ota, mode:selected
build_flags =
    ${board:lilygo-t-display-s3.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:lilygo-t-display-s3.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; Adafruit ESP32 Feather V2 - LED matrix
; ********************************************************************************
[board:adafruit_feather_esp32_v2]
extends = common:esp32_env, display:led_matrix
board = adafruit_feather_esp32_v2
board_build.partitions = default_8MB.csv
board_build.filesystem = littlefs
build_flags =
    ${common:esp32_env.build_flags}
    ${display:led_matrix.build_flags}
    -DBOARD_ADAFRUIT_FEATHER_ESP32_V2
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:led_matrix.lib_deps_builtin}
    ${display:led_matrix.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:led_matrix.lib_ignore_builtin}
    ${display:led_matrix.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; Adafruit ESP32 Feather V2 - Programming via USB
; ********************************************************************************
[env:adafruit_feather_esp32_v2-usb]
extends = board:adafruit_feather_esp32_v2, common:prog_usb, mode:selected
build_flags =
    ${board:adafruit_feather_esp32_v2.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:adafruit_feather_esp32_v2.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; Adafruit ESP32 Feather V2 - Programming via OTA
; ********************************************************************************
[env:adafruit_feather_esp32_v2-ota]
extends = board:adafruit_feather_esp32_v2, common:prog_ota, mode:selected
build_flags =
    ${board:adafruit_feather_esp32_v2.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:adafruit_feather_esp32_v2.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; M5Stack GREY ESP32 - LED matrix
; ********************************************************************************
[board:m5stack-grey]
extends = common:esp32_env, display:lilygo_ttgo_tdisplay
board = m5stack-grey
board_build.partitions = default_8MB.csv
board_build.filesystem = littlefs
board_upload.flash_size = "8MB"
board_upload.maximum_size = 8388608
build_flags =
    ${common:esp32_env.build_flags}
    ${display:lilygo_ttgo_tdisplay.build_flags}
lib_deps =
    ${common:esp32_env.lib_deps_builtin}
    ${common:esp32_env.lib_deps_external}
    ${display:lilygo_ttgo_tdisplay.lib_deps_builtin}
    ${display:lilygo_ttgo_tdisplay.lib_deps_external}
lib_ignore =
    ${common:esp32_env.lib_ignore_builtin}
    ${common:esp32_env.lib_ignore_external}
    ${display:lilygo_ttgo_tdisplay.lib_ignore_builtin}
    ${display:lilygo_ttgo_tdisplay.lib_ignore_external}
extra_scripts =
    pre:./scripts/get_git_rev.py

; ********************************************************************************
; M5Stack GREY ESP32 - Programming via USB
; ********************************************************************************
[env:m5stack-grey-usb]
extends = board:m5stack-grey, common:prog_usb, mode:selected
build_flags =
    ${board:m5stack-grey.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:m5stack-grey.extra_scripts}
    ${common:prog_usb.extra_scripts}

; ********************************************************************************
; M5Stack GREY ESP32 - Programming via OTA
; ********************************************************************************
[env:m5stack-grey-ota]
extends = board:m5stack-grey, common:prog_ota, mode:selected
build_flags =
    ${board:m5stack-grey.build_flags}
    ${mode:selected.build_flags}
extra_scripts =
    ${board:m5stack-grey.extra_scripts}
    ${common:prog_ota.extra_scripts}

; ********************************************************************************
; Native desktop platform - Only for testing purposes
; ********************************************************************************
[env:test]
platform = native
test_framework = unity
build_flags =
    -std=c++11
    -DPROGMEM=
    -DNATIVE
lib_compat_mode = off   ; The muwerk/mufonts require Arduino framework.
lib_deps =
    bblanchon/ArduinoJson @ ~6.19.4
    muwerk/mufonts @ ~0.2.0
lib_ignore =
    Sensors
    ${display:led_matrix.lib_deps_builtin}
    ${display:lilygo_ttgo_tdisplay.lib_deps_builtin}
    ${display:lilygo_tdisplay-s3.lib_deps_builtin}
check_tool = cppcheck, clangtidy
check_flags =
    cppcheck: --std=c++11 --inline-suppr --suppress=noExplicitConstructor --suppress=unreadVariable --suppress=unusedFunction --suppress=*:*/libdeps/*
    clangtidy: --checks=-*,clang-analyzer-*,performance-*
